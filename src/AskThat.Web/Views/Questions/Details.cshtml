@using AskThat.Web.Models.ViewModels
@model QuestionViewModel
@{
    ViewData["Title"] = Model.Title;
}

<div class="container-fluid">
    <!-- Success/Error Messages -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="row mb-3">
        <div class="col-md-8">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-action="Index">Questions</a></li>
                    <li class="breadcrumb-item active" aria-current="page">@Model.Title</li>
                </ol>
            </nav>
        </div>
        <div class="col-md-4 text-end">
            @if (User.Identity?.IsAuthenticated == true &&
                        User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value == Model.UserId.ToString())
            {
                <a asp-action="Edit" asp-route-id="@Model.QuestionId" class="btn btn-outline-primary btn-sm">Edit</a>
                <form asp-action="Delete" asp-route-id="@Model.QuestionId" method="post" class="d-inline">
                    <button type="submit" class="btn btn-outline-danger btn-sm"
                        onclick="return confirm('Are you sure you want to delete this question?')">Delete</button>
                </form>
            }
        </div>
    </div>

    <!-- Question Card -->
    <div class="card mb-4">
        <div class="card-body">
            <h1 class="card-title">@Model.Title</h1>
            <div class="card-text">
                @Html.Raw(Model.Content.Replace("\n", "<br />"))
            </div>
            <hr />
            <div class="d-flex justify-content-between">
                <small class="text-muted">
                    Asked by <strong>@Model.Username</strong> on @Model.CreatedAt.ToString("MMM dd, yyyy 'at' hh:mm tt")
                    @if (Model.UpdatedAt.HasValue)
                    {
                        <span> • Updated on @Model.UpdatedAt.Value.ToString("MMM dd, yyyy 'at' hh:mm tt")</span>
                    }
                </small>
                <span class="badge bg-secondary">@Model.AnswerCount answers</span>
            </div>
        </div>
    </div>

    <!-- Answers Section -->
    <div class="row">
        <div class="col-12">
            <h3>Answers (@Model.AnswerCount)</h3>
            
            @if (Model.Answers?.Any() == true)
            {
                @foreach (var answer in Model.Answers.OrderBy(a => a.CreatedAt))
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <div class="answer-content">
                                @Html.Raw(answer.Content.Replace("\n", "<br />"))
                            </div>
                            <hr />
                            <div class="d-flex justify-content-between align-items-center">
                                <small class="text-muted">
                                    Answered by <strong>@answer.Username</strong> on @answer.CreatedAt.ToString("MMM dd, yyyy 'at' hh:mm tt")
                                    @if (answer.UpdatedAt.HasValue && answer.UpdatedAt != answer.CreatedAt)
                                    {
                                        <span> • Updated on @answer.UpdatedAt.Value.ToString("MMM dd, yyyy 'at' hh:mm tt")</span>
                                    }
                                </small>
                                @if (User.Identity?.IsAuthenticated == true &&
                                            User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value == answer.UserId.ToString())
                                {
                                    <div>
                                        <a asp-controller="Answers" asp-action="Edit" asp-route-id="@answer.AnswerId" 
                                           class="btn btn-outline-primary btn-sm">Edit</a>
                                        <form asp-controller="Answers" asp-action="Delete" asp-route-id="@answer.AnswerId" 
                                              asp-route-questionId="@Model.QuestionId" method="post" class="d-inline">
                                            <button type="submit" class="btn btn-outline-danger btn-sm"
                                                onclick="return confirm('Are you sure you want to delete this answer?')">Delete</button>
                                        </form>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i> No answers yet. Be the first to answer!
                </div>
            }

            <!-- Answer Form for Authenticated Users -->
            @if (User.Identity?.IsAuthenticated == true)
            {
                <div class="card mt-4">
                    <div class="card-header">
                        <h5>Your Answer</h5>
                    </div>
                    <div class="card-body">
                        <form asp-controller="Answers" asp-action="Create" method="post">
                            <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                            
                            <input type="hidden" name="QuestionId" value="@Model.QuestionId" />
                            
                            <div class="mb-3">
                                <label for="Content" class="form-label">Your Answer</label>
                                <textarea name="Content" class="form-control" rows="6" 
                                    placeholder="Write your answer here..." required></textarea>
                                <span asp-validation-for="Content" class="text-danger"></span>
                            </div>
                            
                            <button type="submit" class="btn btn-primary">Post Answer</button>
                        </form>
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-warning mt-4">
                    <i class="fas fa-exclamation-triangle"></i> 
                    <a asp-controller="Auth" asp-action="Login" asp-route-returnUrl="@Context.Request.Path">Login</a> 
                    to post an answer.
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}